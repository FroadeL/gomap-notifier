<?php
/**
 * Discord Class
 *
 */
class Discord
{
    /*
     * The URL generated by Discord to receive webhooks
     * @var string $url The URL generated by Discord to receive webhooks
     */
    private $url = null;
    
    /*
     * (Optional) The name that should be shown as the user sending the message
     * @var string $name The name that should be shown as the user sending the message
     */
    private $name = null;
    
    /*
     * (Optional) The image to be used as the avatar for the user sending the message
     * @var string $avatar The image to be used as the avatar for the user sending the message
     */
    private $avatar = null;
    
    /*
     * The message to be sent to Discord
     * @var string $message The message to be sent to Discord
     */
    private $message = null;
    
    /*
     * Set the url
     * @param string $url The URL generated by Discord to receive webhooks
     */
    public function url($url) {
        $this->url = $url;
    }

    /* 
     * (Optional) Set the name of the user sending the message; if not set, uses the name set in Discord
     * @param string $name The name that should be shown as the user sending the message
     */
    public function name($name) {
        $this->name = $name;
    }
    
    /* 
     * (Optional) Set the avatar of the user sending the message; if not set, uses the avatar set in Discord
     * @param string $avatar The image to be used as the avatar for the user sending the message
     */
    public function avatar($avatar) {
        $this->avatar = $avatar;
    }
    
    /*
     * (Optional) Set the message to be sent; if not set, uses the message set in $this->send()
     * @param string $message The message to send through the webhook
     */
     public function message($message) {
         $this->message = $message;
     }
    
     /* 
     * Sends a message through the webhook
     * @param string $message The message to send through the webhook
     */
    public function send($message = '') {
        if (!empty($message)) {
            $this->message = $message;
        }

        // Replace html tags with discord markdown.
        $this->message = str_replace(array('<b>', '</b>'), '**', $this->message);
        $this->message = str_replace(array('<i>', '</i>'), '*', $this->message);
        
        $data = array(
            'content' =>    $this->message,
            'username' =>   $this->name,
            'avatar_url' => $this->avatar,
        );
        
        $data_string = json_encode($data);
        
        $curl = curl_init();

        curl_setopt($curl, CURLOPT_URL, $this->url);
        curl_setopt($curl, CURLOPT_POST, 1);
        curl_setopt($curl, CURLOPT_HTTPHEADER, array('Content-Type: application/json'));
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, false);
        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($curl, CURLOPT_POSTFIELDS, $data_string);
        
        curl_exec($curl);
        curl_close($curl);

        return true;
    }
}
